<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>MarkDown 语法</title>
    <url>/blog/2021/11/28/MarkDown%20introduce/</url>
    <content><![CDATA[<h1 id="MarkDown-语法总结"><a href="#MarkDown-语法总结" class="headerlink" title="MarkDown 语法总结"></a>MarkDown 语法总结</h1><h2 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h2><ul>
<li><strong>markdown</strong> 中可以使用“空一行”来实现换行</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">Keras 有两个重要的概念： </span><br><span class="line"></span><br><span class="line">模型（Model）:</span><br><span class="line"></span><br><span class="line">层（Layer） :</span><br></pre></td></tr></table></figure>

<ul>
<li>可以使用 HTML &lt;br&gt; 换行</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Keras 有两个重要的概念：&lt;br&gt;</span><br><span class="line">模型（Model）: &lt;br&gt;</span><br><span class="line">层（Layer）:</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="并列插入多幅图片"><a href="#并列插入多幅图片" class="headerlink" title="并列插入多幅图片"></a>并列插入多幅图片</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;001.png&quot;</span> <span class="attr">height</span>=<span class="string">&quot;120&quot;</span> <span class="attr">width</span>=<span class="string">&quot;188&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;012.png&quot;</span> <span class="attr">height</span>=<span class="string">&quot;120&quot;</span> <span class="attr">width</span>=<span class="string">&quot;188&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;032.png&quot;</span> <span class="attr">height</span>=<span class="string">&quot;120&quot;</span> <span class="attr">width</span>=<span class="string">&quot;188&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="字体颜色"><a href="#字体颜色" class="headerlink" title="字体颜色"></a>字体颜色</h2><p>字体颜色：<font color=Blue>Test</font></p>
<p> <code>&lt;font color=Blue&gt;Test&lt;/font&gt;</code></p>
<p>背景颜色：<font style=background:red>Test</font></p>
<p><code>&lt;font style=background:red&gt;Test&lt;/font&gt;</code></p>
<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">#一级标题</span></span><br><span class="line"><span class="section">##二级标题</span></span><br><span class="line"><span class="section">###三级标题</span></span><br></pre></td></tr></table></figure>

<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">无序列表：</span><br><span class="line"><span class="bullet">-</span> 列表1</span><br><span class="line"><span class="bullet">-</span> 列表2</span><br><span class="line"><span class="code">	a 子列表1</span></span><br><span class="line"><span class="code">	b 子列表2</span></span><br><span class="line"><span class="code"></span></span><br><span class="line">有序列表：</span><br><span class="line"><span class="bullet">1.</span> 列表1</span><br><span class="line"><span class="bullet">2.</span> 列表2</span><br></pre></td></tr></table></figure>

<h2 id="横线"><a href="#横线" class="headerlink" title="横线"></a>横线</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure>

<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">网站名字</span>](<span class="link">url</span>)</span><br></pre></td></tr></table></figure>

<h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">图片名字</span>](<span class="link">url</span>)</span><br></pre></td></tr></table></figure>

<h2 id="字体格式"><a href="#字体格式" class="headerlink" title="字体格式"></a>字体格式</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">粗体：</span><br><span class="line"><span class="strong">**粗体**</span></span><br><span class="line">斜体：</span><br><span class="line"><span class="emphasis">*粗体*</span></span><br></pre></td></tr></table></figure>

<h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="code">`hello, world!`</span></span><br><span class="line"></span><br><span class="line"><span class="code">```</span></span><br><span class="line"><span class="code">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="code">using namespace std;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">int mian()&#123;</span></span><br><span class="line"><span class="code">    printf(&quot;hello, world!\n&quot;);</span></span><br><span class="line"><span class="code">    return 0;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure>

<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote>
<p>引用效果！</p>
</blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&gt;引用效果！</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MarkDown</category>
      </categories>
      <tags>
        <tag>MarkDown</tag>
      </tags>
  </entry>
  <entry>
    <title>project_architecture</title>
    <url>/blog/2021/12/07/project-architecture/</url>
    <content><![CDATA[<h1 id="DL-项目的组织架构"><a href="#DL-项目的组织架构" class="headerlink" title="DL 项目的组织架构"></a>DL 项目的组织架构</h1><span id="more"></span>

<p>项目结构如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 建议使用文件夹，如果文件少的话，单个文件也是可以的</span></span><br><span class="line">ProjectDir:</span><br><span class="line">- dataDir</span><br><span class="line">	-- datafile (Cifar10)</span><br><span class="line">- modelsDir <span class="keyword">or</span> model.py  <span class="comment"># 存放模型文件</span></span><br><span class="line">	-- __init__.py (空文件即可)</span><br><span class="line">	-- VGG18.py</span><br><span class="line">	-- resnet18.py</span><br><span class="line">	-- resnet50.py</span><br><span class="line">- utilsDir <span class="keyword">or</span> utils.py  <span class="comment"># 存放一些工具文件</span></span><br><span class="line">	-- __init__.py</span><br><span class="line">	-- plots.py</span><br><span class="line">	-- loss.py</span><br><span class="line">	-- dataset.py</span><br><span class="line">	-- download.py</span><br><span class="line">- train.py (要包含validation的功能)  <span class="comment"># 训练文件</span></span><br><span class="line">- test.py <span class="keyword">or</span> <span class="built_in">eval</span>.py  <span class="comment"># 测试文件</span></span><br><span class="line">- README.md  <span class="comment"># 项目介绍文件</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">...... 下面这些还不太懂</span><br><span class="line">- detect.py</span><br><span class="line">- export.py</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Project Architecture</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>architecture</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/blog/2021/12/01/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>pip usage</title>
    <url>/blog/2021/12/11/pip-usage/pip-usage/</url>
    <content><![CDATA[<h1 id="Pip-Usage"><a href="#Pip-Usage" class="headerlink" title="Pip Usage"></a>Pip Usage</h1><h2 id="pip-基本语法😉"><a href="#pip-基本语法😉" class="headerlink" title="pip 基本语法😉"></a>pip 基本语法😉</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install SomePackage            # latest version</span><br><span class="line">pip install SomePackage==1.0.4     # specific version</span><br><span class="line">pip install &#x27;SomePackage&gt;=1.0.4&#x27;   # minimum version</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="pip-高级用法👍"><a href="#pip-高级用法👍" class="headerlink" title="pip 高级用法👍"></a>pip 高级用法👍</h2><p>编写 package 版本文件 <code>requirements.txt</code> (●’◡’●)</p>
<h3 id="当前已装库-list"><a href="#当前已装库-list" class="headerlink" title="当前已装库 list"></a>当前已装库 list</h3><p><code>pip freeze</code> 可以实现：获得项目运行时，所需安装库的固定版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure>

<p>运行该语句后，在项目目录会出现 <code>requirements.txt</code> 其中包含环境中的各种 <code>package</code></p>
<h3 id="安装语法🎶"><a href="#安装语法🎶" class="headerlink" title="安装语法🎶"></a>安装语法🎶</h3><p><code>pip install -r</code> 将会自动安装 <code>requirements.txt</code> 中的所有 <code>package</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure>

<h3 id="requirements-txt-结构"><a href="#requirements-txt-结构" class="headerlink" title="requirements.txt 结构"></a>requirements.txt 结构</h3><ul>
<li><p>Comments：A line that begins with <code>#</code> is treated as a comment and ignored.</p>
</li>
<li><p>Encoding：Requirements files are <code>utf-8</code> encoding by default</p>
</li>
<li><p>Line continuations（续行）：A line ending in an unescaped <code>\</code> is treated as a line continuation</p>
</li>
</ul>
<h3 id="requirements-txt-例"><a href="#requirements-txt-例" class="headerlink" title="requirements.txt 例"></a>requirements.txt 例</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">###### Requirements with Version Specifiers ######</span></span><br><span class="line"><span class="comment">#   See https://www.python.org/dev/peps/pep-0440/#version-specifiers</span></span><br><span class="line">docopt == <span class="number">0.6</span><span class="number">.1</span>             <span class="comment"># Version Matching. Must be version 0.6.1</span></span><br><span class="line">keyring &gt;= <span class="number">4.1</span><span class="number">.1</span>            <span class="comment"># Minimum version 4.1.1</span></span><br><span class="line">coverage != <span class="number">3.5</span>             <span class="comment"># Version Exclusion. Anything except version 3.5</span></span><br><span class="line">Mopidy-Dirble ~= <span class="number">1.1</span>        <span class="comment"># Compatible release. Same as &gt;= 1.1, == 1.*</span></span><br></pre></td></tr></table></figure>

<p><a href="https://github.com/ultralytics/yolov5/blob/master/requirements.txt">一个例子</a></p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>pip</tag>
      </tags>
  </entry>
  <entry>
    <title>pyYAML Usage</title>
    <url>/blog/2021/12/11/pyYAML/pyYAML/</url>
    <content><![CDATA[<h1 id="pyYAML-Usage"><a href="#pyYAML-Usage" class="headerlink" title="pyYAML Usage"></a>pyYAML Usage</h1><p>使用 yaml 文件配置模型以及训练参数，方便调参数！😉</p>
<p>借鉴文章：<a href="https://zhuanlan.zhihu.com/p/42678768">https://zhuanlan.zhihu.com/p/42678768</a></p>
<span id="more"></span>

<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install PyYAML</span><br></pre></td></tr></table></figure>

<h2 id="YAML-基本语法"><a href="#YAML-基本语法" class="headerlink" title="YAML 基本语法"></a>YAML 基本语法</h2><ul>
<li><p>与Python一样采用缩进区分层级，需要同一层级文件缩进相同，但是不能用TAB，只能使用空格；</p>
</li>
<li><p><code>#</code> 表示注释，从它开始到行尾都被忽略；</p>
</li>
<li><p>大小写敏感；</p>
</li>
<li><p> <code>-</code> 开头，整个文件会被转换为list，其中 <code>-</code> 后的内容属于一个字典；</p>
</li>
<li><p><code>:</code> 前后的内容转换为 dictionary 的键值对；</p>
</li>
<li><p>单引号内的内容按照字符串输出，不会变成转移字符，双引号内内容存在转义字符会转换</p>
</li>
</ul>
<h3 id="list"><a href="#list" class="headerlink" title="list"></a>list</h3><blockquote>
<p>parameters.yaml 内容 &amp; .py：</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># exchange to list</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">a</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">b</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">c</span></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> yaml</span><br><span class="line"><span class="keyword">from</span> yaml <span class="keyword">import</span> CLoader <span class="keyword">as</span> Loader</span><br><span class="line"></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;parameters.yml&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">para = yaml.load(f, Loader)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(para))</span><br><span class="line"><span class="built_in">print</span>(para)</span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;class &#x27;list&#x27;&gt;</span><br><span class="line">[&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;]</span><br></pre></td></tr></table></figure>

<h3 id="dictionary"><a href="#dictionary" class="headerlink" title="dictionary"></a>dictionary</h3><blockquote>
<p>.yml &amp; .py</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># exchange to dictionary</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">zhangsan</span></span><br><span class="line"><span class="attr">age:</span> <span class="number">30</span></span><br><span class="line"><span class="attr">nation:</span> <span class="string">China</span></span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;class &#x27;dict&#x27;&gt;</span><br><span class="line">&#123;&#x27;name&#x27;: &#x27;zhangsan&#x27;, &#x27;age&#x27;: 30, &#x27;nation&#x27;: &#x27;China&#x27;&#125;</span><br></pre></td></tr></table></figure>

<h3 id="混合转换"><a href="#混合转换" class="headerlink" title="混合转换"></a>混合转换</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># exchange to dictionary</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">zhangsan</span></span><br><span class="line">  <span class="attr">age:</span> <span class="number">30</span></span><br><span class="line">  <span class="attr">nation:</span> <span class="string">China</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">lisi</span></span><br><span class="line">  <span class="attr">age:</span> <span class="number">20</span></span><br><span class="line">  <span class="attr">nation:</span> <span class="string">China</span></span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;class &#x27;list&#x27;&gt;</span><br><span class="line">[&#123;&#x27;name&#x27;: &#x27;zhangsan&#x27;, &#x27;age&#x27;: 30, &#x27;nation&#x27;: &#x27;China&#x27;&#125;,</span><br><span class="line"> &#123;&#x27;name&#x27;: &#x27;lisi&#x27;, &#x27;age&#x27;: 20, &#x27;nation&#x27;: &#x27;China&#x27;&#125;]</span><br></pre></td></tr></table></figure>

<h2 id="pyYAML-Usage-1"><a href="#pyYAML-Usage-1" class="headerlink" title="pyYAML Usage"></a>pyYAML Usage</h2><h3 id="import-package"><a href="#import-package" class="headerlink" title="import package"></a>import package</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> yaml  <span class="comment"># import this package</span></span><br></pre></td></tr></table></figure>

<h3 id="load"><a href="#load" class="headerlink" title="load()"></a>load()</h3><blockquote>
<p>加载 yaml 文件，返回一个 pyYAML 对象，这个对象是一个包含了键值对的 <code>list</code> 或 <code>dict</code></p>
</blockquote>
<p>我们一般使用 <code>load()</code> 就够了</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> yaml</span><br><span class="line"><span class="keyword">from</span> yaml <span class="keyword">import</span> CLoader <span class="keyword">as</span> Loader</span><br><span class="line"></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;parameters.yml&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">para = yaml.load(f, Loader)</span><br><span class="line">total_epoch = para[<span class="string">&#x27;total_epochs&#x27;</span>]</span><br><span class="line">batch_size = para[<span class="string">&#x27;batch_size&#x27;</span>]</span><br><span class="line">learning_rate = <span class="built_in">float</span>(para[<span class="string">&#x27;lr&#x27;</span>])</span><br><span class="line">target_acc = para[<span class="string">&#x27;target_acc&#x27;</span>]</span><br><span class="line">model_name = para[<span class="string">&#x27;model&#x27;</span>]</span><br><span class="line">dataset = para[<span class="string">&#x27;dataset&#x27;</span>]</span><br></pre></td></tr></table></figure>

<h3 id="dump"><a href="#dump" class="headerlink" title="dump()"></a>dump()</h3><blockquote>
<p>将键值对，转换成 yaml 格式</p>
</blockquote>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>YAML</tag>
      </tags>
  </entry>
</search>
